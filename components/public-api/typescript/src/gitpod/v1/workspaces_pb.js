// source: gitpod/v1/workspaces.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
goog.object.extend(proto, google_protobuf_field_mask_pb);
var gitpod_v1_pagination_pb = require('../../gitpod/v1/pagination_pb.js');
goog.object.extend(proto, gitpod_v1_pagination_pb);
goog.exportSymbol('proto.gitpod.v1.AdmissionLevel', null, global);
goog.exportSymbol('proto.gitpod.v1.CreateWorkspaceRequest', null, global);
goog.exportSymbol('proto.gitpod.v1.CreateWorkspaceRequest.PrebuildCase', null, global);
goog.exportSymbol('proto.gitpod.v1.CreateWorkspaceResponse', null, global);
goog.exportSymbol('proto.gitpod.v1.GetActiveWorkspaceInstanceRequest', null, global);
goog.exportSymbol('proto.gitpod.v1.GetActiveWorkspaceInstanceResponse', null, global);
goog.exportSymbol('proto.gitpod.v1.GetWorkspaceRequest', null, global);
goog.exportSymbol('proto.gitpod.v1.GetWorkspaceResponse', null, global);
goog.exportSymbol('proto.gitpod.v1.ListWorkspacesRequest', null, global);
goog.exportSymbol('proto.gitpod.v1.ListWorkspacesResponse', null, global);
goog.exportSymbol('proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance', null, global);
goog.exportSymbol('proto.gitpod.v1.ListenToImageBuildLogsRequest', null, global);
goog.exportSymbol('proto.gitpod.v1.ListenToImageBuildLogsResponse', null, global);
goog.exportSymbol('proto.gitpod.v1.ListenToWorkspaceInstanceRequest', null, global);
goog.exportSymbol('proto.gitpod.v1.ListenToWorkspaceInstanceResponse', null, global);
goog.exportSymbol('proto.gitpod.v1.StartWorkspaceRequest', null, global);
goog.exportSymbol('proto.gitpod.v1.StartWorkspaceResponse', null, global);
goog.exportSymbol('proto.gitpod.v1.StopWorkspaceRequest', null, global);
goog.exportSymbol('proto.gitpod.v1.StopWorkspaceResponse', null, global);
goog.exportSymbol('proto.gitpod.v1.Workspace', null, global);
goog.exportSymbol('proto.gitpod.v1.WorkspaceInstance', null, global);
goog.exportSymbol('proto.gitpod.v1.WorkspaceInstanceAuthentication', null, global);
goog.exportSymbol('proto.gitpod.v1.WorkspaceInstanceConditions', null, global);
goog.exportSymbol('proto.gitpod.v1.WorkspaceInstancePhase', null, global);
goog.exportSymbol('proto.gitpod.v1.WorkspaceInstanceStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gitpod.v1.ListWorkspacesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gitpod.v1.ListWorkspacesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gitpod.v1.ListWorkspacesRequest.displayName = 'proto.gitpod.v1.ListWorkspacesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gitpod.v1.ListWorkspacesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gitpod.v1.ListWorkspacesResponse.repeatedFields_, null);
};
goog.inherits(proto.gitpod.v1.ListWorkspacesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gitpod.v1.ListWorkspacesResponse.displayName = 'proto.gitpod.v1.ListWorkspacesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance.displayName = 'proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gitpod.v1.GetWorkspaceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gitpod.v1.GetWorkspaceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gitpod.v1.GetWorkspaceRequest.displayName = 'proto.gitpod.v1.GetWorkspaceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gitpod.v1.GetWorkspaceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gitpod.v1.GetWorkspaceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gitpod.v1.GetWorkspaceResponse.displayName = 'proto.gitpod.v1.GetWorkspaceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gitpod.v1.CreateWorkspaceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.gitpod.v1.CreateWorkspaceRequest.oneofGroups_);
};
goog.inherits(proto.gitpod.v1.CreateWorkspaceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gitpod.v1.CreateWorkspaceRequest.displayName = 'proto.gitpod.v1.CreateWorkspaceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gitpod.v1.CreateWorkspaceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gitpod.v1.CreateWorkspaceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gitpod.v1.CreateWorkspaceResponse.displayName = 'proto.gitpod.v1.CreateWorkspaceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gitpod.v1.StartWorkspaceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gitpod.v1.StartWorkspaceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gitpod.v1.StartWorkspaceRequest.displayName = 'proto.gitpod.v1.StartWorkspaceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gitpod.v1.StartWorkspaceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gitpod.v1.StartWorkspaceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gitpod.v1.StartWorkspaceResponse.displayName = 'proto.gitpod.v1.StartWorkspaceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gitpod.v1.GetActiveWorkspaceInstanceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gitpod.v1.GetActiveWorkspaceInstanceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gitpod.v1.GetActiveWorkspaceInstanceRequest.displayName = 'proto.gitpod.v1.GetActiveWorkspaceInstanceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gitpod.v1.GetActiveWorkspaceInstanceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gitpod.v1.GetActiveWorkspaceInstanceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gitpod.v1.GetActiveWorkspaceInstanceResponse.displayName = 'proto.gitpod.v1.GetActiveWorkspaceInstanceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gitpod.v1.ListenToWorkspaceInstanceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gitpod.v1.ListenToWorkspaceInstanceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gitpod.v1.ListenToWorkspaceInstanceRequest.displayName = 'proto.gitpod.v1.ListenToWorkspaceInstanceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gitpod.v1.ListenToWorkspaceInstanceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gitpod.v1.ListenToWorkspaceInstanceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gitpod.v1.ListenToWorkspaceInstanceResponse.displayName = 'proto.gitpod.v1.ListenToWorkspaceInstanceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gitpod.v1.ListenToImageBuildLogsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gitpod.v1.ListenToImageBuildLogsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gitpod.v1.ListenToImageBuildLogsRequest.displayName = 'proto.gitpod.v1.ListenToImageBuildLogsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gitpod.v1.ListenToImageBuildLogsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gitpod.v1.ListenToImageBuildLogsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gitpod.v1.ListenToImageBuildLogsResponse.displayName = 'proto.gitpod.v1.ListenToImageBuildLogsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gitpod.v1.StopWorkspaceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gitpod.v1.StopWorkspaceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gitpod.v1.StopWorkspaceRequest.displayName = 'proto.gitpod.v1.StopWorkspaceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gitpod.v1.StopWorkspaceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gitpod.v1.StopWorkspaceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gitpod.v1.StopWorkspaceResponse.displayName = 'proto.gitpod.v1.StopWorkspaceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gitpod.v1.Workspace = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gitpod.v1.Workspace, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gitpod.v1.Workspace.displayName = 'proto.gitpod.v1.Workspace';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gitpod.v1.WorkspaceInstance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gitpod.v1.WorkspaceInstance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gitpod.v1.WorkspaceInstance.displayName = 'proto.gitpod.v1.WorkspaceInstance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gitpod.v1.WorkspaceInstanceStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gitpod.v1.WorkspaceInstanceStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gitpod.v1.WorkspaceInstanceStatus.displayName = 'proto.gitpod.v1.WorkspaceInstanceStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gitpod.v1.WorkspaceInstanceConditions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gitpod.v1.WorkspaceInstanceConditions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gitpod.v1.WorkspaceInstanceConditions.displayName = 'proto.gitpod.v1.WorkspaceInstanceConditions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gitpod.v1.WorkspaceInstanceAuthentication = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gitpod.v1.WorkspaceInstanceAuthentication, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gitpod.v1.WorkspaceInstanceAuthentication.displayName = 'proto.gitpod.v1.WorkspaceInstanceAuthentication';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gitpod.v1.ListWorkspacesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gitpod.v1.ListWorkspacesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gitpod.v1.ListWorkspacesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.ListWorkspacesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagination: (f = msg.getPagination()) && gitpod_v1_pagination_pb.Pagination.toObject(includeInstance, f),
    fieldMask: (f = msg.getFieldMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gitpod.v1.ListWorkspacesRequest}
 */
proto.gitpod.v1.ListWorkspacesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gitpod.v1.ListWorkspacesRequest;
  return proto.gitpod.v1.ListWorkspacesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gitpod.v1.ListWorkspacesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gitpod.v1.ListWorkspacesRequest}
 */
proto.gitpod.v1.ListWorkspacesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new gitpod_v1_pagination_pb.Pagination;
      reader.readMessage(value,gitpod_v1_pagination_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setFieldMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gitpod.v1.ListWorkspacesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gitpod.v1.ListWorkspacesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gitpod.v1.ListWorkspacesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.ListWorkspacesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      gitpod_v1_pagination_pb.Pagination.serializeBinaryToWriter
    );
  }
  f = message.getFieldMask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional Pagination pagination = 1;
 * @return {?proto.gitpod.v1.Pagination}
 */
proto.gitpod.v1.ListWorkspacesRequest.prototype.getPagination = function() {
  return /** @type{?proto.gitpod.v1.Pagination} */ (
    jspb.Message.getWrapperField(this, gitpod_v1_pagination_pb.Pagination, 1));
};


/**
 * @param {?proto.gitpod.v1.Pagination|undefined} value
 * @return {!proto.gitpod.v1.ListWorkspacesRequest} returns this
*/
proto.gitpod.v1.ListWorkspacesRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gitpod.v1.ListWorkspacesRequest} returns this
 */
proto.gitpod.v1.ListWorkspacesRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gitpod.v1.ListWorkspacesRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.FieldMask field_mask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.gitpod.v1.ListWorkspacesRequest.prototype.getFieldMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.gitpod.v1.ListWorkspacesRequest} returns this
*/
proto.gitpod.v1.ListWorkspacesRequest.prototype.setFieldMask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gitpod.v1.ListWorkspacesRequest} returns this
 */
proto.gitpod.v1.ListWorkspacesRequest.prototype.clearFieldMask = function() {
  return this.setFieldMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gitpod.v1.ListWorkspacesRequest.prototype.hasFieldMask = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gitpod.v1.ListWorkspacesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gitpod.v1.ListWorkspacesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gitpod.v1.ListWorkspacesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gitpod.v1.ListWorkspacesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.ListWorkspacesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, ""),
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gitpod.v1.ListWorkspacesResponse}
 */
proto.gitpod.v1.ListWorkspacesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gitpod.v1.ListWorkspacesResponse;
  return proto.gitpod.v1.ListWorkspacesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gitpod.v1.ListWorkspacesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gitpod.v1.ListWorkspacesResponse}
 */
proto.gitpod.v1.ListWorkspacesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    case 1:
      var value = new proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance;
      reader.readMessage(value,proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gitpod.v1.ListWorkspacesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gitpod.v1.ListWorkspacesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gitpod.v1.ListWorkspacesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.ListWorkspacesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance.prototype.toObject = function(opt_includeInstance) {
  return proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.gitpod.v1.Workspace.toObject(includeInstance, f),
    lastActiveInstances: (f = msg.getLastActiveInstances()) && proto.gitpod.v1.WorkspaceInstance.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance}
 */
proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance;
  return proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance}
 */
proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gitpod.v1.Workspace;
      reader.readMessage(value,proto.gitpod.v1.Workspace.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.gitpod.v1.WorkspaceInstance;
      reader.readMessage(value,proto.gitpod.v1.WorkspaceInstance.deserializeBinaryFromReader);
      msg.setLastActiveInstances(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gitpod.v1.Workspace.serializeBinaryToWriter
    );
  }
  f = message.getLastActiveInstances();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gitpod.v1.WorkspaceInstance.serializeBinaryToWriter
    );
  }
};


/**
 * optional Workspace result = 1;
 * @return {?proto.gitpod.v1.Workspace}
 */
proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance.prototype.getResult = function() {
  return /** @type{?proto.gitpod.v1.Workspace} */ (
    jspb.Message.getWrapperField(this, proto.gitpod.v1.Workspace, 1));
};


/**
 * @param {?proto.gitpod.v1.Workspace|undefined} value
 * @return {!proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance} returns this
*/
proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance} returns this
 */
proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional WorkspaceInstance last_active_instances = 2;
 * @return {?proto.gitpod.v1.WorkspaceInstance}
 */
proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance.prototype.getLastActiveInstances = function() {
  return /** @type{?proto.gitpod.v1.WorkspaceInstance} */ (
    jspb.Message.getWrapperField(this, proto.gitpod.v1.WorkspaceInstance, 2));
};


/**
 * @param {?proto.gitpod.v1.WorkspaceInstance|undefined} value
 * @return {!proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance} returns this
*/
proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance.prototype.setLastActiveInstances = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance} returns this
 */
proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance.prototype.clearLastActiveInstances = function() {
  return this.setLastActiveInstances(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance.prototype.hasLastActiveInstances = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.gitpod.v1.ListWorkspacesResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.ListWorkspacesResponse} returns this
 */
proto.gitpod.v1.ListWorkspacesResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated WorkspaceAndInstance result = 1;
 * @return {!Array<!proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance>}
 */
proto.gitpod.v1.ListWorkspacesResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance, 1));
};


/**
 * @param {!Array<!proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance>} value
 * @return {!proto.gitpod.v1.ListWorkspacesResponse} returns this
*/
proto.gitpod.v1.ListWorkspacesResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance}
 */
proto.gitpod.v1.ListWorkspacesResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gitpod.v1.ListWorkspacesResponse.WorkspaceAndInstance, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gitpod.v1.ListWorkspacesResponse} returns this
 */
proto.gitpod.v1.ListWorkspacesResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gitpod.v1.GetWorkspaceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gitpod.v1.GetWorkspaceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gitpod.v1.GetWorkspaceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.GetWorkspaceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    workspaceId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gitpod.v1.GetWorkspaceRequest}
 */
proto.gitpod.v1.GetWorkspaceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gitpod.v1.GetWorkspaceRequest;
  return proto.gitpod.v1.GetWorkspaceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gitpod.v1.GetWorkspaceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gitpod.v1.GetWorkspaceRequest}
 */
proto.gitpod.v1.GetWorkspaceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkspaceId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gitpod.v1.GetWorkspaceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gitpod.v1.GetWorkspaceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gitpod.v1.GetWorkspaceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.GetWorkspaceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkspaceId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string workspace_id = 1;
 * @return {string}
 */
proto.gitpod.v1.GetWorkspaceRequest.prototype.getWorkspaceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.GetWorkspaceRequest} returns this
 */
proto.gitpod.v1.GetWorkspaceRequest.prototype.setWorkspaceId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gitpod.v1.GetWorkspaceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gitpod.v1.GetWorkspaceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gitpod.v1.GetWorkspaceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.GetWorkspaceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.gitpod.v1.Workspace.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gitpod.v1.GetWorkspaceResponse}
 */
proto.gitpod.v1.GetWorkspaceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gitpod.v1.GetWorkspaceResponse;
  return proto.gitpod.v1.GetWorkspaceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gitpod.v1.GetWorkspaceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gitpod.v1.GetWorkspaceResponse}
 */
proto.gitpod.v1.GetWorkspaceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gitpod.v1.Workspace;
      reader.readMessage(value,proto.gitpod.v1.Workspace.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gitpod.v1.GetWorkspaceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gitpod.v1.GetWorkspaceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gitpod.v1.GetWorkspaceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.GetWorkspaceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gitpod.v1.Workspace.serializeBinaryToWriter
    );
  }
};


/**
 * optional Workspace result = 1;
 * @return {?proto.gitpod.v1.Workspace}
 */
proto.gitpod.v1.GetWorkspaceResponse.prototype.getResult = function() {
  return /** @type{?proto.gitpod.v1.Workspace} */ (
    jspb.Message.getWrapperField(this, proto.gitpod.v1.Workspace, 1));
};


/**
 * @param {?proto.gitpod.v1.Workspace|undefined} value
 * @return {!proto.gitpod.v1.GetWorkspaceResponse} returns this
*/
proto.gitpod.v1.GetWorkspaceResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gitpod.v1.GetWorkspaceResponse} returns this
 */
proto.gitpod.v1.GetWorkspaceResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gitpod.v1.GetWorkspaceResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gitpod.v1.CreateWorkspaceRequest.oneofGroups_ = [[3,4]];

/**
 * @enum {number}
 */
proto.gitpod.v1.CreateWorkspaceRequest.PrebuildCase = {
  PREBUILD_NOT_SET: 0,
  IF_AVAILABLE: 3,
  PREBUILD_ID: 4
};

/**
 * @return {proto.gitpod.v1.CreateWorkspaceRequest.PrebuildCase}
 */
proto.gitpod.v1.CreateWorkspaceRequest.prototype.getPrebuildCase = function() {
  return /** @type {proto.gitpod.v1.CreateWorkspaceRequest.PrebuildCase} */(jspb.Message.computeOneofCase(this, proto.gitpod.v1.CreateWorkspaceRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gitpod.v1.CreateWorkspaceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gitpod.v1.CreateWorkspaceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gitpod.v1.CreateWorkspaceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.CreateWorkspaceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    idempotencyToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    contextUrl: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ifAvailable: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    prebuildId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gitpod.v1.CreateWorkspaceRequest}
 */
proto.gitpod.v1.CreateWorkspaceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gitpod.v1.CreateWorkspaceRequest;
  return proto.gitpod.v1.CreateWorkspaceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gitpod.v1.CreateWorkspaceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gitpod.v1.CreateWorkspaceRequest}
 */
proto.gitpod.v1.CreateWorkspaceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdempotencyToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContextUrl(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIfAvailable(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrebuildId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gitpod.v1.CreateWorkspaceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gitpod.v1.CreateWorkspaceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gitpod.v1.CreateWorkspaceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.CreateWorkspaceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdempotencyToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContextUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string idempotency_token = 1;
 * @return {string}
 */
proto.gitpod.v1.CreateWorkspaceRequest.prototype.getIdempotencyToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.CreateWorkspaceRequest} returns this
 */
proto.gitpod.v1.CreateWorkspaceRequest.prototype.setIdempotencyToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string context_url = 2;
 * @return {string}
 */
proto.gitpod.v1.CreateWorkspaceRequest.prototype.getContextUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.CreateWorkspaceRequest} returns this
 */
proto.gitpod.v1.CreateWorkspaceRequest.prototype.setContextUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool if_available = 3;
 * @return {boolean}
 */
proto.gitpod.v1.CreateWorkspaceRequest.prototype.getIfAvailable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gitpod.v1.CreateWorkspaceRequest} returns this
 */
proto.gitpod.v1.CreateWorkspaceRequest.prototype.setIfAvailable = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.gitpod.v1.CreateWorkspaceRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gitpod.v1.CreateWorkspaceRequest} returns this
 */
proto.gitpod.v1.CreateWorkspaceRequest.prototype.clearIfAvailable = function() {
  return jspb.Message.setOneofField(this, 3, proto.gitpod.v1.CreateWorkspaceRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gitpod.v1.CreateWorkspaceRequest.prototype.hasIfAvailable = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string prebuild_id = 4;
 * @return {string}
 */
proto.gitpod.v1.CreateWorkspaceRequest.prototype.getPrebuildId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.CreateWorkspaceRequest} returns this
 */
proto.gitpod.v1.CreateWorkspaceRequest.prototype.setPrebuildId = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.gitpod.v1.CreateWorkspaceRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gitpod.v1.CreateWorkspaceRequest} returns this
 */
proto.gitpod.v1.CreateWorkspaceRequest.prototype.clearPrebuildId = function() {
  return jspb.Message.setOneofField(this, 4, proto.gitpod.v1.CreateWorkspaceRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gitpod.v1.CreateWorkspaceRequest.prototype.hasPrebuildId = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gitpod.v1.CreateWorkspaceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gitpod.v1.CreateWorkspaceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gitpod.v1.CreateWorkspaceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.CreateWorkspaceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    workspaceId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gitpod.v1.CreateWorkspaceResponse}
 */
proto.gitpod.v1.CreateWorkspaceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gitpod.v1.CreateWorkspaceResponse;
  return proto.gitpod.v1.CreateWorkspaceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gitpod.v1.CreateWorkspaceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gitpod.v1.CreateWorkspaceResponse}
 */
proto.gitpod.v1.CreateWorkspaceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkspaceId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gitpod.v1.CreateWorkspaceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gitpod.v1.CreateWorkspaceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gitpod.v1.CreateWorkspaceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.CreateWorkspaceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkspaceId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string workspace_id = 2;
 * @return {string}
 */
proto.gitpod.v1.CreateWorkspaceResponse.prototype.getWorkspaceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.CreateWorkspaceResponse} returns this
 */
proto.gitpod.v1.CreateWorkspaceResponse.prototype.setWorkspaceId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gitpod.v1.StartWorkspaceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gitpod.v1.StartWorkspaceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gitpod.v1.StartWorkspaceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.StartWorkspaceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    idempotencyToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    workspaceId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gitpod.v1.StartWorkspaceRequest}
 */
proto.gitpod.v1.StartWorkspaceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gitpod.v1.StartWorkspaceRequest;
  return proto.gitpod.v1.StartWorkspaceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gitpod.v1.StartWorkspaceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gitpod.v1.StartWorkspaceRequest}
 */
proto.gitpod.v1.StartWorkspaceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdempotencyToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkspaceId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gitpod.v1.StartWorkspaceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gitpod.v1.StartWorkspaceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gitpod.v1.StartWorkspaceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.StartWorkspaceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdempotencyToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWorkspaceId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string idempotency_token = 1;
 * @return {string}
 */
proto.gitpod.v1.StartWorkspaceRequest.prototype.getIdempotencyToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.StartWorkspaceRequest} returns this
 */
proto.gitpod.v1.StartWorkspaceRequest.prototype.setIdempotencyToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string workspace_id = 2;
 * @return {string}
 */
proto.gitpod.v1.StartWorkspaceRequest.prototype.getWorkspaceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.StartWorkspaceRequest} returns this
 */
proto.gitpod.v1.StartWorkspaceRequest.prototype.setWorkspaceId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gitpod.v1.StartWorkspaceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gitpod.v1.StartWorkspaceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gitpod.v1.StartWorkspaceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.StartWorkspaceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    instanceId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    workspaceUrl: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gitpod.v1.StartWorkspaceResponse}
 */
proto.gitpod.v1.StartWorkspaceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gitpod.v1.StartWorkspaceResponse;
  return proto.gitpod.v1.StartWorkspaceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gitpod.v1.StartWorkspaceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gitpod.v1.StartWorkspaceResponse}
 */
proto.gitpod.v1.StartWorkspaceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstanceId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkspaceUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gitpod.v1.StartWorkspaceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gitpod.v1.StartWorkspaceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gitpod.v1.StartWorkspaceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.StartWorkspaceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstanceId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getWorkspaceUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string instance_id = 2;
 * @return {string}
 */
proto.gitpod.v1.StartWorkspaceResponse.prototype.getInstanceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.StartWorkspaceResponse} returns this
 */
proto.gitpod.v1.StartWorkspaceResponse.prototype.setInstanceId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string workspace_url = 3;
 * @return {string}
 */
proto.gitpod.v1.StartWorkspaceResponse.prototype.getWorkspaceUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.StartWorkspaceResponse} returns this
 */
proto.gitpod.v1.StartWorkspaceResponse.prototype.setWorkspaceUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gitpod.v1.GetActiveWorkspaceInstanceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gitpod.v1.GetActiveWorkspaceInstanceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gitpod.v1.GetActiveWorkspaceInstanceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.GetActiveWorkspaceInstanceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    workspaceId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gitpod.v1.GetActiveWorkspaceInstanceRequest}
 */
proto.gitpod.v1.GetActiveWorkspaceInstanceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gitpod.v1.GetActiveWorkspaceInstanceRequest;
  return proto.gitpod.v1.GetActiveWorkspaceInstanceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gitpod.v1.GetActiveWorkspaceInstanceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gitpod.v1.GetActiveWorkspaceInstanceRequest}
 */
proto.gitpod.v1.GetActiveWorkspaceInstanceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkspaceId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gitpod.v1.GetActiveWorkspaceInstanceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gitpod.v1.GetActiveWorkspaceInstanceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gitpod.v1.GetActiveWorkspaceInstanceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.GetActiveWorkspaceInstanceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkspaceId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string workspace_id = 1;
 * @return {string}
 */
proto.gitpod.v1.GetActiveWorkspaceInstanceRequest.prototype.getWorkspaceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.GetActiveWorkspaceInstanceRequest} returns this
 */
proto.gitpod.v1.GetActiveWorkspaceInstanceRequest.prototype.setWorkspaceId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gitpod.v1.GetActiveWorkspaceInstanceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gitpod.v1.GetActiveWorkspaceInstanceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gitpod.v1.GetActiveWorkspaceInstanceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.GetActiveWorkspaceInstanceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = msg.getInstance()) && proto.gitpod.v1.WorkspaceInstance.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gitpod.v1.GetActiveWorkspaceInstanceResponse}
 */
proto.gitpod.v1.GetActiveWorkspaceInstanceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gitpod.v1.GetActiveWorkspaceInstanceResponse;
  return proto.gitpod.v1.GetActiveWorkspaceInstanceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gitpod.v1.GetActiveWorkspaceInstanceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gitpod.v1.GetActiveWorkspaceInstanceResponse}
 */
proto.gitpod.v1.GetActiveWorkspaceInstanceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.gitpod.v1.WorkspaceInstance;
      reader.readMessage(value,proto.gitpod.v1.WorkspaceInstance.deserializeBinaryFromReader);
      msg.setInstance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gitpod.v1.GetActiveWorkspaceInstanceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gitpod.v1.GetActiveWorkspaceInstanceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gitpod.v1.GetActiveWorkspaceInstanceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.GetActiveWorkspaceInstanceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstance();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gitpod.v1.WorkspaceInstance.serializeBinaryToWriter
    );
  }
};


/**
 * optional WorkspaceInstance instance = 2;
 * @return {?proto.gitpod.v1.WorkspaceInstance}
 */
proto.gitpod.v1.GetActiveWorkspaceInstanceResponse.prototype.getInstance = function() {
  return /** @type{?proto.gitpod.v1.WorkspaceInstance} */ (
    jspb.Message.getWrapperField(this, proto.gitpod.v1.WorkspaceInstance, 2));
};


/**
 * @param {?proto.gitpod.v1.WorkspaceInstance|undefined} value
 * @return {!proto.gitpod.v1.GetActiveWorkspaceInstanceResponse} returns this
*/
proto.gitpod.v1.GetActiveWorkspaceInstanceResponse.prototype.setInstance = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gitpod.v1.GetActiveWorkspaceInstanceResponse} returns this
 */
proto.gitpod.v1.GetActiveWorkspaceInstanceResponse.prototype.clearInstance = function() {
  return this.setInstance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gitpod.v1.GetActiveWorkspaceInstanceResponse.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gitpod.v1.ListenToWorkspaceInstanceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gitpod.v1.ListenToWorkspaceInstanceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gitpod.v1.ListenToWorkspaceInstanceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.ListenToWorkspaceInstanceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instanceId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gitpod.v1.ListenToWorkspaceInstanceRequest}
 */
proto.gitpod.v1.ListenToWorkspaceInstanceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gitpod.v1.ListenToWorkspaceInstanceRequest;
  return proto.gitpod.v1.ListenToWorkspaceInstanceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gitpod.v1.ListenToWorkspaceInstanceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gitpod.v1.ListenToWorkspaceInstanceRequest}
 */
proto.gitpod.v1.ListenToWorkspaceInstanceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstanceId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gitpod.v1.ListenToWorkspaceInstanceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gitpod.v1.ListenToWorkspaceInstanceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gitpod.v1.ListenToWorkspaceInstanceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.ListenToWorkspaceInstanceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstanceId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string instance_id = 1;
 * @return {string}
 */
proto.gitpod.v1.ListenToWorkspaceInstanceRequest.prototype.getInstanceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.ListenToWorkspaceInstanceRequest} returns this
 */
proto.gitpod.v1.ListenToWorkspaceInstanceRequest.prototype.setInstanceId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gitpod.v1.ListenToWorkspaceInstanceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gitpod.v1.ListenToWorkspaceInstanceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gitpod.v1.ListenToWorkspaceInstanceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.ListenToWorkspaceInstanceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    instanceStatus: (f = msg.getInstanceStatus()) && proto.gitpod.v1.WorkspaceInstanceStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gitpod.v1.ListenToWorkspaceInstanceResponse}
 */
proto.gitpod.v1.ListenToWorkspaceInstanceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gitpod.v1.ListenToWorkspaceInstanceResponse;
  return proto.gitpod.v1.ListenToWorkspaceInstanceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gitpod.v1.ListenToWorkspaceInstanceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gitpod.v1.ListenToWorkspaceInstanceResponse}
 */
proto.gitpod.v1.ListenToWorkspaceInstanceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.gitpod.v1.WorkspaceInstanceStatus;
      reader.readMessage(value,proto.gitpod.v1.WorkspaceInstanceStatus.deserializeBinaryFromReader);
      msg.setInstanceStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gitpod.v1.ListenToWorkspaceInstanceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gitpod.v1.ListenToWorkspaceInstanceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gitpod.v1.ListenToWorkspaceInstanceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.ListenToWorkspaceInstanceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstanceStatus();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gitpod.v1.WorkspaceInstanceStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional WorkspaceInstanceStatus instance_status = 2;
 * @return {?proto.gitpod.v1.WorkspaceInstanceStatus}
 */
proto.gitpod.v1.ListenToWorkspaceInstanceResponse.prototype.getInstanceStatus = function() {
  return /** @type{?proto.gitpod.v1.WorkspaceInstanceStatus} */ (
    jspb.Message.getWrapperField(this, proto.gitpod.v1.WorkspaceInstanceStatus, 2));
};


/**
 * @param {?proto.gitpod.v1.WorkspaceInstanceStatus|undefined} value
 * @return {!proto.gitpod.v1.ListenToWorkspaceInstanceResponse} returns this
*/
proto.gitpod.v1.ListenToWorkspaceInstanceResponse.prototype.setInstanceStatus = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gitpod.v1.ListenToWorkspaceInstanceResponse} returns this
 */
proto.gitpod.v1.ListenToWorkspaceInstanceResponse.prototype.clearInstanceStatus = function() {
  return this.setInstanceStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gitpod.v1.ListenToWorkspaceInstanceResponse.prototype.hasInstanceStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gitpod.v1.ListenToImageBuildLogsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gitpod.v1.ListenToImageBuildLogsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gitpod.v1.ListenToImageBuildLogsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.ListenToImageBuildLogsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instanceId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gitpod.v1.ListenToImageBuildLogsRequest}
 */
proto.gitpod.v1.ListenToImageBuildLogsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gitpod.v1.ListenToImageBuildLogsRequest;
  return proto.gitpod.v1.ListenToImageBuildLogsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gitpod.v1.ListenToImageBuildLogsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gitpod.v1.ListenToImageBuildLogsRequest}
 */
proto.gitpod.v1.ListenToImageBuildLogsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstanceId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gitpod.v1.ListenToImageBuildLogsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gitpod.v1.ListenToImageBuildLogsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gitpod.v1.ListenToImageBuildLogsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.ListenToImageBuildLogsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstanceId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string instance_id = 1;
 * @return {string}
 */
proto.gitpod.v1.ListenToImageBuildLogsRequest.prototype.getInstanceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.ListenToImageBuildLogsRequest} returns this
 */
proto.gitpod.v1.ListenToImageBuildLogsRequest.prototype.setInstanceId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gitpod.v1.ListenToImageBuildLogsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gitpod.v1.ListenToImageBuildLogsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gitpod.v1.ListenToImageBuildLogsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.ListenToImageBuildLogsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    line: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gitpod.v1.ListenToImageBuildLogsResponse}
 */
proto.gitpod.v1.ListenToImageBuildLogsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gitpod.v1.ListenToImageBuildLogsResponse;
  return proto.gitpod.v1.ListenToImageBuildLogsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gitpod.v1.ListenToImageBuildLogsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gitpod.v1.ListenToImageBuildLogsResponse}
 */
proto.gitpod.v1.ListenToImageBuildLogsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLine(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gitpod.v1.ListenToImageBuildLogsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gitpod.v1.ListenToImageBuildLogsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gitpod.v1.ListenToImageBuildLogsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.ListenToImageBuildLogsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLine();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string line = 2;
 * @return {string}
 */
proto.gitpod.v1.ListenToImageBuildLogsResponse.prototype.getLine = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.ListenToImageBuildLogsResponse} returns this
 */
proto.gitpod.v1.ListenToImageBuildLogsResponse.prototype.setLine = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gitpod.v1.StopWorkspaceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gitpod.v1.StopWorkspaceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gitpod.v1.StopWorkspaceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.StopWorkspaceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    idempotencyToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    workspaceId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gitpod.v1.StopWorkspaceRequest}
 */
proto.gitpod.v1.StopWorkspaceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gitpod.v1.StopWorkspaceRequest;
  return proto.gitpod.v1.StopWorkspaceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gitpod.v1.StopWorkspaceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gitpod.v1.StopWorkspaceRequest}
 */
proto.gitpod.v1.StopWorkspaceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdempotencyToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkspaceId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gitpod.v1.StopWorkspaceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gitpod.v1.StopWorkspaceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gitpod.v1.StopWorkspaceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.StopWorkspaceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdempotencyToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWorkspaceId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string idempotency_token = 1;
 * @return {string}
 */
proto.gitpod.v1.StopWorkspaceRequest.prototype.getIdempotencyToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.StopWorkspaceRequest} returns this
 */
proto.gitpod.v1.StopWorkspaceRequest.prototype.setIdempotencyToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string workspace_id = 2;
 * @return {string}
 */
proto.gitpod.v1.StopWorkspaceRequest.prototype.getWorkspaceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.StopWorkspaceRequest} returns this
 */
proto.gitpod.v1.StopWorkspaceRequest.prototype.setWorkspaceId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gitpod.v1.StopWorkspaceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gitpod.v1.StopWorkspaceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gitpod.v1.StopWorkspaceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.StopWorkspaceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gitpod.v1.StopWorkspaceResponse}
 */
proto.gitpod.v1.StopWorkspaceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gitpod.v1.StopWorkspaceResponse;
  return proto.gitpod.v1.StopWorkspaceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gitpod.v1.StopWorkspaceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gitpod.v1.StopWorkspaceResponse}
 */
proto.gitpod.v1.StopWorkspaceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gitpod.v1.StopWorkspaceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gitpod.v1.StopWorkspaceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gitpod.v1.StopWorkspaceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.StopWorkspaceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gitpod.v1.Workspace.prototype.toObject = function(opt_includeInstance) {
  return proto.gitpod.v1.Workspace.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gitpod.v1.Workspace} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.Workspace.toObject = function(includeInstance, msg) {
  var f, obj = {
    workspaceId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ownerId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    projectId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contextUrl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gitpod.v1.Workspace}
 */
proto.gitpod.v1.Workspace.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gitpod.v1.Workspace;
  return proto.gitpod.v1.Workspace.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gitpod.v1.Workspace} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gitpod.v1.Workspace}
 */
proto.gitpod.v1.Workspace.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkspaceId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContextUrl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gitpod.v1.Workspace.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gitpod.v1.Workspace.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gitpod.v1.Workspace} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.Workspace.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkspaceId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOwnerId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContextUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string workspace_id = 1;
 * @return {string}
 */
proto.gitpod.v1.Workspace.prototype.getWorkspaceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.Workspace} returns this
 */
proto.gitpod.v1.Workspace.prototype.setWorkspaceId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string owner_id = 2;
 * @return {string}
 */
proto.gitpod.v1.Workspace.prototype.getOwnerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.Workspace} returns this
 */
proto.gitpod.v1.Workspace.prototype.setOwnerId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string project_id = 3;
 * @return {string}
 */
proto.gitpod.v1.Workspace.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.Workspace} returns this
 */
proto.gitpod.v1.Workspace.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string context_url = 4;
 * @return {string}
 */
proto.gitpod.v1.Workspace.prototype.getContextUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.Workspace} returns this
 */
proto.gitpod.v1.Workspace.prototype.setContextUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.gitpod.v1.Workspace.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.Workspace} returns this
 */
proto.gitpod.v1.Workspace.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gitpod.v1.WorkspaceInstance.prototype.toObject = function(opt_includeInstance) {
  return proto.gitpod.v1.WorkspaceInstance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gitpod.v1.WorkspaceInstance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.WorkspaceInstance.toObject = function(includeInstance, msg) {
  var f, obj = {
    instanceId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    workspaceId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && proto.gitpod.v1.WorkspaceInstanceStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gitpod.v1.WorkspaceInstance}
 */
proto.gitpod.v1.WorkspaceInstance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gitpod.v1.WorkspaceInstance;
  return proto.gitpod.v1.WorkspaceInstance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gitpod.v1.WorkspaceInstance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gitpod.v1.WorkspaceInstance}
 */
proto.gitpod.v1.WorkspaceInstance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstanceId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkspaceId(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 4:
      var value = new proto.gitpod.v1.WorkspaceInstanceStatus;
      reader.readMessage(value,proto.gitpod.v1.WorkspaceInstanceStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gitpod.v1.WorkspaceInstance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gitpod.v1.WorkspaceInstance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gitpod.v1.WorkspaceInstance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.WorkspaceInstance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstanceId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWorkspaceId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.gitpod.v1.WorkspaceInstanceStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional string instance_id = 1;
 * @return {string}
 */
proto.gitpod.v1.WorkspaceInstance.prototype.getInstanceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.WorkspaceInstance} returns this
 */
proto.gitpod.v1.WorkspaceInstance.prototype.setInstanceId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string workspace_id = 2;
 * @return {string}
 */
proto.gitpod.v1.WorkspaceInstance.prototype.getWorkspaceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.WorkspaceInstance} returns this
 */
proto.gitpod.v1.WorkspaceInstance.prototype.setWorkspaceId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.gitpod.v1.WorkspaceInstance.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.gitpod.v1.WorkspaceInstance} returns this
*/
proto.gitpod.v1.WorkspaceInstance.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gitpod.v1.WorkspaceInstance} returns this
 */
proto.gitpod.v1.WorkspaceInstance.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gitpod.v1.WorkspaceInstance.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional WorkspaceInstanceStatus status = 4;
 * @return {?proto.gitpod.v1.WorkspaceInstanceStatus}
 */
proto.gitpod.v1.WorkspaceInstance.prototype.getStatus = function() {
  return /** @type{?proto.gitpod.v1.WorkspaceInstanceStatus} */ (
    jspb.Message.getWrapperField(this, proto.gitpod.v1.WorkspaceInstanceStatus, 4));
};


/**
 * @param {?proto.gitpod.v1.WorkspaceInstanceStatus|undefined} value
 * @return {!proto.gitpod.v1.WorkspaceInstance} returns this
*/
proto.gitpod.v1.WorkspaceInstance.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gitpod.v1.WorkspaceInstance} returns this
 */
proto.gitpod.v1.WorkspaceInstance.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gitpod.v1.WorkspaceInstance.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gitpod.v1.WorkspaceInstanceStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.gitpod.v1.WorkspaceInstanceStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gitpod.v1.WorkspaceInstanceStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.WorkspaceInstanceStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    statusVersion: jspb.Message.getFieldWithDefault(msg, 1, 0),
    phase: jspb.Message.getFieldWithDefault(msg, 2, 0),
    conditions: (f = msg.getConditions()) && proto.gitpod.v1.WorkspaceInstanceConditions.toObject(includeInstance, f),
    message: jspb.Message.getFieldWithDefault(msg, 4, ""),
    url: jspb.Message.getFieldWithDefault(msg, 5, ""),
    auth: (f = msg.getAuth()) && proto.gitpod.v1.WorkspaceInstanceAuthentication.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gitpod.v1.WorkspaceInstanceStatus}
 */
proto.gitpod.v1.WorkspaceInstanceStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gitpod.v1.WorkspaceInstanceStatus;
  return proto.gitpod.v1.WorkspaceInstanceStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gitpod.v1.WorkspaceInstanceStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gitpod.v1.WorkspaceInstanceStatus}
 */
proto.gitpod.v1.WorkspaceInstanceStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStatusVersion(value);
      break;
    case 2:
      var value = /** @type {!proto.gitpod.v1.WorkspaceInstancePhase} */ (reader.readEnum());
      msg.setPhase(value);
      break;
    case 3:
      var value = new proto.gitpod.v1.WorkspaceInstanceConditions;
      reader.readMessage(value,proto.gitpod.v1.WorkspaceInstanceConditions.deserializeBinaryFromReader);
      msg.setConditions(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 6:
      var value = new proto.gitpod.v1.WorkspaceInstanceAuthentication;
      reader.readMessage(value,proto.gitpod.v1.WorkspaceInstanceAuthentication.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gitpod.v1.WorkspaceInstanceStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gitpod.v1.WorkspaceInstanceStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gitpod.v1.WorkspaceInstanceStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.WorkspaceInstanceStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatusVersion();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getPhase();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getConditions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gitpod.v1.WorkspaceInstanceConditions.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.gitpod.v1.WorkspaceInstanceAuthentication.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 status_version = 1;
 * @return {number}
 */
proto.gitpod.v1.WorkspaceInstanceStatus.prototype.getStatusVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.gitpod.v1.WorkspaceInstanceStatus} returns this
 */
proto.gitpod.v1.WorkspaceInstanceStatus.prototype.setStatusVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional WorkspaceInstancePhase phase = 2;
 * @return {!proto.gitpod.v1.WorkspaceInstancePhase}
 */
proto.gitpod.v1.WorkspaceInstanceStatus.prototype.getPhase = function() {
  return /** @type {!proto.gitpod.v1.WorkspaceInstancePhase} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.gitpod.v1.WorkspaceInstancePhase} value
 * @return {!proto.gitpod.v1.WorkspaceInstanceStatus} returns this
 */
proto.gitpod.v1.WorkspaceInstanceStatus.prototype.setPhase = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional WorkspaceInstanceConditions conditions = 3;
 * @return {?proto.gitpod.v1.WorkspaceInstanceConditions}
 */
proto.gitpod.v1.WorkspaceInstanceStatus.prototype.getConditions = function() {
  return /** @type{?proto.gitpod.v1.WorkspaceInstanceConditions} */ (
    jspb.Message.getWrapperField(this, proto.gitpod.v1.WorkspaceInstanceConditions, 3));
};


/**
 * @param {?proto.gitpod.v1.WorkspaceInstanceConditions|undefined} value
 * @return {!proto.gitpod.v1.WorkspaceInstanceStatus} returns this
*/
proto.gitpod.v1.WorkspaceInstanceStatus.prototype.setConditions = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gitpod.v1.WorkspaceInstanceStatus} returns this
 */
proto.gitpod.v1.WorkspaceInstanceStatus.prototype.clearConditions = function() {
  return this.setConditions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gitpod.v1.WorkspaceInstanceStatus.prototype.hasConditions = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string message = 4;
 * @return {string}
 */
proto.gitpod.v1.WorkspaceInstanceStatus.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.WorkspaceInstanceStatus} returns this
 */
proto.gitpod.v1.WorkspaceInstanceStatus.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string url = 5;
 * @return {string}
 */
proto.gitpod.v1.WorkspaceInstanceStatus.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.WorkspaceInstanceStatus} returns this
 */
proto.gitpod.v1.WorkspaceInstanceStatus.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional WorkspaceInstanceAuthentication auth = 6;
 * @return {?proto.gitpod.v1.WorkspaceInstanceAuthentication}
 */
proto.gitpod.v1.WorkspaceInstanceStatus.prototype.getAuth = function() {
  return /** @type{?proto.gitpod.v1.WorkspaceInstanceAuthentication} */ (
    jspb.Message.getWrapperField(this, proto.gitpod.v1.WorkspaceInstanceAuthentication, 6));
};


/**
 * @param {?proto.gitpod.v1.WorkspaceInstanceAuthentication|undefined} value
 * @return {!proto.gitpod.v1.WorkspaceInstanceStatus} returns this
*/
proto.gitpod.v1.WorkspaceInstanceStatus.prototype.setAuth = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gitpod.v1.WorkspaceInstanceStatus} returns this
 */
proto.gitpod.v1.WorkspaceInstanceStatus.prototype.clearAuth = function() {
  return this.setAuth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gitpod.v1.WorkspaceInstanceStatus.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gitpod.v1.WorkspaceInstanceConditions.prototype.toObject = function(opt_includeInstance) {
  return proto.gitpod.v1.WorkspaceInstanceConditions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gitpod.v1.WorkspaceInstanceConditions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.WorkspaceInstanceConditions.toObject = function(includeInstance, msg) {
  var f, obj = {
    failed: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timeout: jspb.Message.getFieldWithDefault(msg, 2, ""),
    firstUserActivity: (f = msg.getFirstUserActivity()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    stoppedByRequest: jspb.Message.getBooleanFieldWithDefault(msg, 11, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gitpod.v1.WorkspaceInstanceConditions}
 */
proto.gitpod.v1.WorkspaceInstanceConditions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gitpod.v1.WorkspaceInstanceConditions;
  return proto.gitpod.v1.WorkspaceInstanceConditions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gitpod.v1.WorkspaceInstanceConditions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gitpod.v1.WorkspaceInstanceConditions}
 */
proto.gitpod.v1.WorkspaceInstanceConditions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailed(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimeout(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFirstUserActivity(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStoppedByRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gitpod.v1.WorkspaceInstanceConditions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gitpod.v1.WorkspaceInstanceConditions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gitpod.v1.WorkspaceInstanceConditions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.WorkspaceInstanceConditions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFailed();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimeout();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFirstUserActivity();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
};


/**
 * optional string failed = 1;
 * @return {string}
 */
proto.gitpod.v1.WorkspaceInstanceConditions.prototype.getFailed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.WorkspaceInstanceConditions} returns this
 */
proto.gitpod.v1.WorkspaceInstanceConditions.prototype.setFailed = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string timeout = 2;
 * @return {string}
 */
proto.gitpod.v1.WorkspaceInstanceConditions.prototype.getTimeout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.WorkspaceInstanceConditions} returns this
 */
proto.gitpod.v1.WorkspaceInstanceConditions.prototype.setTimeout = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp first_user_activity = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.gitpod.v1.WorkspaceInstanceConditions.prototype.getFirstUserActivity = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.gitpod.v1.WorkspaceInstanceConditions} returns this
*/
proto.gitpod.v1.WorkspaceInstanceConditions.prototype.setFirstUserActivity = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gitpod.v1.WorkspaceInstanceConditions} returns this
 */
proto.gitpod.v1.WorkspaceInstanceConditions.prototype.clearFirstUserActivity = function() {
  return this.setFirstUserActivity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gitpod.v1.WorkspaceInstanceConditions.prototype.hasFirstUserActivity = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool stopped_by_request = 11;
 * @return {boolean}
 */
proto.gitpod.v1.WorkspaceInstanceConditions.prototype.getStoppedByRequest = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gitpod.v1.WorkspaceInstanceConditions} returns this
 */
proto.gitpod.v1.WorkspaceInstanceConditions.prototype.setStoppedByRequest = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gitpod.v1.WorkspaceInstanceConditions} returns this
 */
proto.gitpod.v1.WorkspaceInstanceConditions.prototype.clearStoppedByRequest = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gitpod.v1.WorkspaceInstanceConditions.prototype.hasStoppedByRequest = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gitpod.v1.WorkspaceInstanceAuthentication.prototype.toObject = function(opt_includeInstance) {
  return proto.gitpod.v1.WorkspaceInstanceAuthentication.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gitpod.v1.WorkspaceInstanceAuthentication} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.WorkspaceInstanceAuthentication.toObject = function(includeInstance, msg) {
  var f, obj = {
    admission: jspb.Message.getFieldWithDefault(msg, 1, 0),
    ownerToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gitpod.v1.WorkspaceInstanceAuthentication}
 */
proto.gitpod.v1.WorkspaceInstanceAuthentication.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gitpod.v1.WorkspaceInstanceAuthentication;
  return proto.gitpod.v1.WorkspaceInstanceAuthentication.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gitpod.v1.WorkspaceInstanceAuthentication} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gitpod.v1.WorkspaceInstanceAuthentication}
 */
proto.gitpod.v1.WorkspaceInstanceAuthentication.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.gitpod.v1.AdmissionLevel} */ (reader.readEnum());
      msg.setAdmission(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gitpod.v1.WorkspaceInstanceAuthentication.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gitpod.v1.WorkspaceInstanceAuthentication.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gitpod.v1.WorkspaceInstanceAuthentication} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gitpod.v1.WorkspaceInstanceAuthentication.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAdmission();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getOwnerToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional AdmissionLevel admission = 1;
 * @return {!proto.gitpod.v1.AdmissionLevel}
 */
proto.gitpod.v1.WorkspaceInstanceAuthentication.prototype.getAdmission = function() {
  return /** @type {!proto.gitpod.v1.AdmissionLevel} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.gitpod.v1.AdmissionLevel} value
 * @return {!proto.gitpod.v1.WorkspaceInstanceAuthentication} returns this
 */
proto.gitpod.v1.WorkspaceInstanceAuthentication.prototype.setAdmission = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string owner_token = 2;
 * @return {string}
 */
proto.gitpod.v1.WorkspaceInstanceAuthentication.prototype.getOwnerToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gitpod.v1.WorkspaceInstanceAuthentication} returns this
 */
proto.gitpod.v1.WorkspaceInstanceAuthentication.prototype.setOwnerToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.gitpod.v1.WorkspaceInstancePhase = {
  WORKSPACE_INSTANCE_PHASE_UNSPECIFIED: 0,
  WORKSPACE_INSTANCE_PHASE_PENDING: 2,
  WORKSPACE_INSTANCE_PHASE_CREATING: 3,
  WORKSPACE_INSTANCE_PHASE_INITIALIZING: 4,
  WORKSPACE_INSTANCE_PHASE_RUNNING: 5,
  WORKSPACE_INSTANCE_PHASE_INTERRUPTED: 6,
  WORKSPACE_INSTANCE_PHASE_STOPPING: 7,
  WORKSPACE_INSTANCE_PHASE_STOPPED: 8
};

/**
 * @enum {number}
 */
proto.gitpod.v1.AdmissionLevel = {
  ADMISSION_LEVEL_UNSPECIFIED: 0,
  ADMISSION_LEVEL_OWNER_ONLY: 1,
  ADMISSION_LEVEL_EVERYONE: 2
};

goog.object.extend(exports, proto.gitpod.v1);
